image: node:latest

variables:
  GH_REF: "github.com/dinivas/dinivas.git"

stages:
  - install
  - build
  - deploy
  - deploy-gh-pages

# Define an hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache:
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

install_dependencies:
  stage: install
  script:
    - npm i
  # Redefine cache to have default pull-push policy
  extends: .dependencies_cache
  cache:
    policy: pull-push

build:
  stage: build
  script:
    - npm run affected:output:plain
    - npm run affected:ci:build
  extends: .dependencies_cache
  only:
    - branches

build_and_dockerize:
  stage: build
  image: ghcr.io/gperdomor/nx-docker:16.3-alpine
  services:
    - docker:20.10.7-dind
  variables:
    GIT_DEPTH: 0
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    #- echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    #- docker run --privileged --rm tonistiigi/binfmt --install all # required for multi-platform build
    - docker buildx create --use
    - npm run affected:output:plain
    - npm run affected:ci:build
    - npm run affected:ci:docker
  extends: .dependencies_cache
  only:
    - master

pages:
  stage: deploy
  script:
    - npm run compodoc
  extends: .dependencies_cache
  artifacts:
    paths:
      - public
  only:
    - master

gh_pages:
  stage: deploy-gh-pages
  script:
    - bash ./hack/deploy-gh-pages.sh
  needs:
    - job: pages
      artifacts: true
  only:
    - master