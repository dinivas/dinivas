version: '3'

volumes:
  postgres_keycloak_data:
    driver: local
  postgres_dinivas_data:
    driver: local
  postgres_galaxy_data:
    driver: local
  postgres_redis_data:
    driver: local

services:
  # DINIVAS
  dinivas:
    image: dinivas/dinivas
    ports:
      - '8080:8080'
  dinivas-api:
    image: dinivas/api
    environment:
      - PORT=3333
    ports:
      - '3333:3333'
    volumes:
      - ./config/docker/api.yml:/config.yml
    depends_on:
      - postgres-dinivas
      - redis
  dinivas-packer-worker:
    image: dinivas/packer-worker
    environment:
      - PORT=3335
    ports:
      - '3335:3335'
    volumes:
      - ./config/docker/packer-worker.yml:/config.yml
    depends_on:
      - redis
  dinivas-terraform-worker:
    image: dinivas/terraform-worker
    environment:
      - PORT=3334
    ports:
      - '3334:3334'
    volumes:
      - ./config/docker/tf-worker.yml:/config.yml
    depends_on:
      - redis
  # KEYCLOAK
  postgres-keycloak:
    image: postgres
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    image: jboss/keycloak:9.0.0
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres_keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8085:8080
    volumes:
      - ./dinivas-realm-tpl.json:/tmp/dinivas-realm-tpl.json
    command:
      - |
        -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile
        -Dkeycloak.migration.file=/tmp/dinivas-realm-tpl.json -Dkeycloak.profile.feature.upload_scripts=enabled
        -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
    depends_on:
      - postgres-keycloak
  postgres-dinivas:
    image: postgres
    volumes:
      - postgres_dinivas_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dinivas
      POSTGRES_USER: dinivas
      POSTGRES_PASSWORD: Pa55W0rd
    # ports:
    #   - 5433:5432
  # Ansible Galaxy
  #ansible-galaxy:
  #  image: dinivas/ansible-galaxy
  #  command: >
  #    /bin/sh -c "nginx -g '"'daemon on;'"' && /entrypoint create-admin-user 2> /dev/null && /entrypoint manage migrate && /entrypoint run api"
  #  environment:
  #    - GALAXY_SECRET_KEY=secret
  #    - GALAXY_DB_URL=postgres://galaxy:galaxy@postgres-galaxy:5432/galaxy
  #    - GALAXY_RABBITMQ_HOST=rabbitmq
  #    - GALAXY_RABBITMQ_PASSWORD=galaxy
  #    - GALAXY_DJANGO_ADMIN_USER=admin
  #    - GALAXY_DJANGO_ADMIN_PASSWORD=password
  #  volumes:
  #    - ./nginx/keycloak.conf:/etc/nginx/nginx.conf
  #  ports:
  #    - '8000:8000'
  #  depends_on:
  #    - postgres-galaxy
  #    - rabbitmq
  #    - galaxy-influxdb
  #postgres-galaxy:
  #  image: postgres
  #  volumes:
  #    - postgres_galaxy_data:/var/lib/postgresql/data
  #  environment:
  #    POSTGRES_DB: galaxy
  #    POSTGRES_USER: galaxy
  #    POSTGRES_PASSWORD: galaxy
  #  # ports:
  #  #   - 5434:5432
  #ansible-galaxy-celery-worker:
  #  image: dinivas/ansible-galaxy
  #  command: ['run', 'celery-worker']
  #  environment:
  #    - GALAXY_SECRET_KEY=secret
  #    - GALAXY_DB_URL=postgres://galaxy:galaxy@postgres-galaxy:5432/galaxy
  #    - GALAXY_RABBITMQ_HOST=rabbitmq
  #    - GALAXY_RABBITMQ_PASSWORD=galaxy
  #    - C_FORCE_ROOT=1
  #  links:
  #    - postgres-galaxy
  #    - rabbitmq
  #    - galaxy-influxdb
  #galaxy-influxdb:
  #  image: influxdb:latest
  #  # ports:
  #  #   - '8086:8086'
  #  environment:
  #    - INFLUXDB_REPORTING_DISABLED=true
  #    - INFLUXDB_DB=galaxy
  #    - INFLUXDB_ADMIN_USER=admin
  #    - INFLUXDB_ADMIN_PASSWORD=admin
  #    - INFLUXDB_WRITE_USER=galaxy
  #    - INFLUXDB_WRITE_USER_PASSWORD=galaxy
  #rabbitmq:
  #  image: rabbitmq:3-management
  #  # ports:
  #  #   - '5672:5672'
  #  #   - '15672:15672'
  #  environment:
  #    - RABBITMQ_DEFAULT_USER=galaxy
  #    - RABBITMQ_DEFAULT_PASS=galaxy
  #    - RABBITMQ_DEFAULT_VHOST=galaxy
  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    volumes:
      - postgres_redis_data:/data
  guacd:
    image: guacamole/guacd
    ports:
      - '4822:4822'
